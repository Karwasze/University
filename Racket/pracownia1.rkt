#lang racket

(define (cube-root x)
  
  (define (dist x y)
    (abs (- x y)))

  (define (cube x)
    (* x x x))
  
  (define (improve approx)
    (/ (+ (/ x (* approx approx)) (* approx 2)) 3))

  (define (good-enough? approx)
    (< (dist x (cube approx)) 0.000001))

  (define (iter approx)
    (if (good-enough? approx)
        approx
        (iter (improve approx))))
  
  (iter 1.0))

(writeln "Testy na liczbach naturalnych")
(printf "\n")
(printf "Pierwiastek sześcienny z 0 wynosi ")
(cube-root 0)
(printf "Pierwiastek sześcienny z 1 wynosi ")
(cube-root 1)
(printf "Pierwiastek sześcienny z 8 wynosi ")
(cube-root 8)
(printf "Pierwiastek sześcienny z 12 wynosi ")
(cube-root 12)
(printf "Pierwiastek sześcienny z 27 wynosi ")
(cube-root 27)
(printf "Pierwiastek sześcienny z 64 wynosi ")
(cube-root 64)
(printf "Pierwiastek sześcienny z 100 wynosi ")
(cube-root 100)
(printf "Pierwiastek sześcienny z 125 wynosi ")
(cube-root 125)
(printf "Pierwiastek sześcienny z 216 wynosi ")
(cube-root 216)
(printf "Pierwiastek sześcienny z 343 wynosi ")
(cube-root 343)
(printf "Pierwiastek sześcienny z 512 wynosi ")
(cube-root 512)
(printf "Pierwiastek sześcienny z 729 wynosi ")
(cube-root 729)
(write "Pierwiastek sześcienny z 1000 wynosi ")
(cube-root 1000)
(printf "Pierwiastek sześcienny z 2147483647 wynosi ")
(cube-root 2147483647)
(printf "\n")

(writeln "Testy na dodatnich liczbach wymiernych")
(printf "\n")
(printf "Pierwiastek sześcienny z 0.00 wynosi ")
(cube-root 0.00)
(printf "Pierwiastek sześcienny z1.97 wynosi ")
(cube-root 1.97)
(printf "Pierwiastek sześcienny z 1.0 wynosi ")
(cube-root 1.0)
(printf "Pierwiastek sześcienny z 10.00000001 wynosi ")
(cube-root 10.00000001)
(printf "Pierwiastek sześcienny z 100.1231245 wynosi ")
(cube-root 100.1231245)
(printf "Pierwiastek sześcienny z 17.999999 wynosi ")
(cube-root 17.999999)
(printf "\n")

(writeln "Testy na ujemnych liczbach wymiernych")
(printf "\n")
(printf "Pierwiastek sześcienny z -100.1231245 wynosi ")
(cube-root -100.1231245)
(printf "Pierwiastek sześcienny z -88.87651245 wynosi ")
(cube-root -88.87651245)
(printf "Pierwiastek sześcienny z -0.125 wynosi ")
(cube-root -0.125)
(printf "Pierwiastek sześcienny z -0.876515 wynosi ")
(cube-root -0.876515)
(printf "Pierwiastek sześcienny z -2.1231245 wynosi ")
(cube-root -2.1231245)
(printf "Pierwiastek sześcienny z -12.87651245 wynosi ")
(cube-root -12.87651245)
(printf "Pierwiastek sześcienny z -12.1231245 wynosi ")
(cube-root -12.1231245)
(printf "Pierwiastek sześcienny z -65.1324888888 wynosi ")
(cube-root -65.1324888888)
(printf "\n")

(writeln "Testy na ujemnych liczbach naturalnych")
(printf "\n")
(printf "Pierwiastek sześcienny z -1 wynosi ")
(cube-root -1)
(printf "Pierwiastek sześcienny z -8 wynosi ")
(cube-root -8)
(printf "Pierwiastek sześcienny z -12 wynosi ")
(cube-root -12)
(printf "Pierwiastek sześcienny z -27 wynosi ")
(cube-root -27)
(printf "Pierwiastek sześcienny z -64 wynosi ")
(cube-root -64)
(printf "Pierwiastek sześcienny z -100 wynosi ")
(cube-root -100)
(printf "Pierwiastek sześcienny z -125 wynosi ")
(cube-root -125)
(printf "Pierwiastek sześcienny z -216 wynosi ")
(cube-root -216)
(printf "Pierwiastek sześcienny z -343 wynosi ")
(cube-root -343)
(printf "Pierwiastek sześcienny z -512 wynosi ")
(cube-root -512)
(printf "Pierwiastek sześcienny z -729 wynosi ")
(cube-root -729)
(write "Pierwiastek sześcienny z -1000 wynosi ")
(cube-root -1000)
(printf "Pierwiastek sześcienny z -2147483647 wynosi ")
(cube-root -2147483647)
(printf "\n")